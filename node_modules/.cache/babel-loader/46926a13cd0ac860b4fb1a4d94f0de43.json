{"ast":null,"code":"import _defineProperty from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { RECEIVE_QUESTIONS, ANSWER_QUESTION } from \"../actions/questions\";\nexport default function questions() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return _objectSpread({}, state, action.questions);\n\n    case ANSWER_QUESTION:\n      // return a new object state\n      // spread all the previous questions out from state\n      return _objectSpread({}, state, _defineProperty({}, action.qid, _objectSpread({}, state[action.qid], _defineProperty({}, action.answer, _objectSpread({}, state[action.qid][action.answer], {\n        votes: _toConsumableArray(state[action.qid][action.answer].push(action.authedUser))\n      })))));\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/src/reducers/questions.js"],"names":["RECEIVE_QUESTIONS","ANSWER_QUESTION","questions","state","action","type","qid","answer","votes","push","authedUser"],"mappings":";;;AAAA,SAASA,iBAAT,EAA4BC,eAA5B,QAAmD,sBAAnD;AAEA,eAAe,SAASC,SAAT,GAAuC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,iBAAL;AACE,+BACKG,KADL,EAEKC,MAAM,CAACF,SAFZ;;AAIF,SAAKD,eAAL;AACE;AACA;AACA,+BACKE,KADL,sBAEGC,MAAM,CAACE,GAFV,oBAGOH,KAAK,CAACC,MAAM,CAACE,GAAR,CAHZ,sBAIKF,MAAM,CAACG,MAJZ,oBAKSJ,KAAK,CAACC,MAAM,CAACE,GAAR,CAAL,CAAkBF,MAAM,CAACG,MAAzB,CALT;AAMMC,QAAAA,KAAK,qBAAML,KAAK,CAACC,MAAM,CAACE,GAAR,CAAL,CAAkBF,MAAM,CAACG,MAAzB,EAAiCE,IAAjC,CAAsCL,MAAM,CAACM,UAA7C,CAAN;AANX;;AAUF;AACE,aAAOP,KAAP;AApBJ;AAsBD","sourcesContent":["import { RECEIVE_QUESTIONS, ANSWER_QUESTION } from \"../actions/questions\";\n\nexport default function questions(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return {\n        ...state,\n        ...action.questions\n      };\n    case ANSWER_QUESTION:\n      // return a new object state\n      // spread all the previous questions out from state\n      return {\n        ...state,\n        [action.qid]: {\n          ...state[action.qid],\n          [action.answer]: {\n            ...state[action.qid][action.answer],\n            votes: [...state[action.qid][action.answer].push(action.authedUser)]\n          }\n        }\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}