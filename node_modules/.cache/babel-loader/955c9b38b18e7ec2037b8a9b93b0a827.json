{"ast":null,"code":"import _classCallCheck from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/src/components/Question.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { handleAnswerQuestion } from \"../actions/questions\";\n\nvar Question =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Question, _Component);\n\n  function Question() {\n    _classCallCheck(this, Question);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Question).apply(this, arguments));\n  }\n\n  _createClass(Question, [{\n    key: \"handleAnswerClick\",\n    value: function handleAnswerClick(e) {\n      e.preventDefault();\n      console.log(e);\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          authedUser = _this$props.authedUser,\n          question = _this$props.question;\n      console.log(dispatch);\n      console.log(authedUser);\n      console.log(question); // need to pass it an info object that contains authedUser, qId, and answer\n\n      dispatch(this.handleAnswerQuestion());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var id = this.props.id;\n      return React.createElement(Link, {\n        to: \"/questions/\".concat(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Would you rather...\"), React.createElement(\"button\", {\n        onClick: this.handleAnswerClick.bind(this),\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.props.firstOption), React.createElement(\"button\", {\n        onClick: this.handleAnswerClick.bind(this),\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.secondOption));\n    }\n  }]);\n\n  return Question;\n}(Component); // The first argument is data we are destructuring from the store { authedUser, users, questions }\n// The second argument is the regular props being passed into the Question component { id }\n\n\nfunction mapStateToProps(_ref, _ref2) {\n  var authedUser = _ref.authedUser,\n      users = _ref.users,\n      questions = _ref.questions;\n  var id = _ref2.id;\n  var question = questions[id];\n  var firstOption = question.optionOne.text;\n  var secondOption = question.optionTwo.text;\n  var user = users[id];\n  return {\n    authedUser: authedUser,\n    firstOption: firstOption,\n    secondOption: secondOption,\n    question: question // question: formatQuestion(question)\n\n  };\n}\n\nexport default connect(mapStateToProps)(Question);","map":{"version":3,"sources":["/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/src/components/Question.js"],"names":["React","Component","connect","BrowserRouter","Router","Route","Link","handleAnswerQuestion","Question","e","preventDefault","console","log","props","dispatch","authedUser","question","id","handleAnswerClick","bind","firstOption","secondOption","mapStateToProps","users","questions","optionOne","text","optionTwo","user"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,SAASC,oBAAT,QAAqC,sBAArC;;IAEMC,Q;;;;;;;;;;;;;sCACcC,C,EAAG;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AAFmB,wBAGwB,KAAKI,KAH7B;AAAA,UAGXC,QAHW,eAGXA,QAHW;AAAA,UAGDC,UAHC,eAGDA,UAHC;AAAA,UAGWC,QAHX,eAGWA,QAHX;AAInBL,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ,EANmB,CAOnB;;AACAF,MAAAA,QAAQ,CAAC,KAAKP,oBAAL,EAAD,CAAR;AACD;;;6BAEQ;AACP,UAAMU,EAAE,GAAG,KAAKJ,KAAL,CAAWI,EAAtB;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,EAAE,uBAAgBA,EAAhB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AACE,QAAA,OAAO,EAAE,KAAKC,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CADX;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKN,KAAL,CAAWO,WAJd,CAFF,EAQE;AACE,QAAA,OAAO,EAAE,KAAKF,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CADX;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKN,KAAL,CAAWQ,YAJd,CARF,CADF;AAiBD;;;;EA/BoBpB,S,GAkCvB;AACA;;;AACA,SAASqB,eAAT,cAAmE;AAAA,MAAxCP,UAAwC,QAAxCA,UAAwC;AAAA,MAA5BQ,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,SAAqB,QAArBA,SAAqB;AAAA,MAANP,EAAM,SAANA,EAAM;AACjE,MAAMD,QAAQ,GAAGQ,SAAS,CAACP,EAAD,CAA1B;AACA,MAAMG,WAAW,GAAGJ,QAAQ,CAACS,SAAT,CAAmBC,IAAvC;AACA,MAAML,YAAY,GAAGL,QAAQ,CAACW,SAAT,CAAmBD,IAAxC;AACA,MAAME,IAAI,GAAGL,KAAK,CAACN,EAAD,CAAlB;AACA,SAAO;AACLF,IAAAA,UAAU,EAAVA,UADK;AAELK,IAAAA,WAAW,EAAXA,WAFK;AAGLC,IAAAA,YAAY,EAAZA,YAHK;AAILL,IAAAA,QAAQ,EAARA,QAJK,CAKL;;AALK,GAAP;AAOD;;AAED,eAAed,OAAO,CAACoB,eAAD,CAAP,CAAyBd,QAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { handleAnswerQuestion } from \"../actions/questions\";\n\nclass Question extends Component {\n  handleAnswerClick(e) {\n    e.preventDefault();\n    console.log(e);\n    const { dispatch, authedUser, question } = this.props;\n    console.log(dispatch);\n    console.log(authedUser);\n    console.log(question);\n    // need to pass it an info object that contains authedUser, qId, and answer\n    dispatch(this.handleAnswerQuestion());\n  }\n\n  render() {\n    const id = this.props.id;\n    return (\n      <Link to={`/questions/${id}`}>\n        <h3>Would you rather...</h3>\n        <button\n          onClick={this.handleAnswerClick.bind(this)}\n          className=\"btn btn-primary\"\n        >\n          {this.props.firstOption}\n        </button>\n        <button\n          onClick={this.handleAnswerClick.bind(this)}\n          className=\"btn btn-primary\"\n        >\n          {this.props.secondOption}\n        </button>\n      </Link>\n    );\n  }\n}\n\n// The first argument is data we are destructuring from the store { authedUser, users, questions }\n// The second argument is the regular props being passed into the Question component { id }\nfunction mapStateToProps({ authedUser, users, questions }, { id }) {\n  const question = questions[id];\n  const firstOption = question.optionOne.text;\n  const secondOption = question.optionTwo.text;\n  const user = users[id];\n  return {\n    authedUser,\n    firstOption,\n    secondOption,\n    question\n    // question: formatQuestion(question)\n  };\n}\n\nexport default connect(mapStateToProps)(Question);\n"]},"metadata":{},"sourceType":"module"}