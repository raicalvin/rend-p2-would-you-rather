{"ast":null,"code":"import _defineProperty from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { RECEIVE_QUESTIONS, ANSWER_QUESTION, ADD_QUESTION } from \"../actions/questions\";\nexport default function questions() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return _objectSpread({}, state, action.questions);\n    // HANDLE ANSWEREING A NEW QUESTION\n\n    case ANSWER_QUESTION:\n      // return a new object state\n      // spread all the previous questions out from state\n      // remember, you are re-creating each piece of the state. In this case, we are rebuilding parts of the questions state by accessing certain keys, spreading them out, and adding new information to them. Study this carefully.\n      return _objectSpread({}, state, _defineProperty({}, action.qid, _objectSpread({}, state[action.qid], _defineProperty({}, action.answer, _objectSpread({}, state[action.qid][action.answer], {\n        votes: _toConsumableArray(state[action.qid][action.answer].votes).concat([action.authedUser])\n      })))));\n    // ADD A NEW QUESTION TO THE STORE\n\n    case ADD_QUESTION:\n      var question = action.question;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/src/reducers/questions.js"],"names":["RECEIVE_QUESTIONS","ANSWER_QUESTION","ADD_QUESTION","questions","state","action","type","qid","answer","votes","authedUser","question"],"mappings":";;;AAAA,SACEA,iBADF,EAEEC,eAFF,EAGEC,YAHF,QAIO,sBAJP;AAMA,eAAe,SAASC,SAAT,GAAuC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,iBAAL;AACE,+BACKI,KADL,EAEKC,MAAM,CAACF,SAFZ;AAIF;;AACA,SAAKF,eAAL;AACE;AACA;AACA;AACA,+BACKG,KADL,sBAEGC,MAAM,CAACE,GAFV,oBAGOH,KAAK,CAACC,MAAM,CAACE,GAAR,CAHZ,sBAIKF,MAAM,CAACG,MAJZ,oBAKSJ,KAAK,CAACC,MAAM,CAACE,GAAR,CAAL,CAAkBF,MAAM,CAACG,MAAzB,CALT;AAMMC,QAAAA,KAAK,qBACAL,KAAK,CAACC,MAAM,CAACE,GAAR,CAAL,CAAkBF,MAAM,CAACG,MAAzB,EAAiCC,KADjC,UAEHJ,MAAM,CAACK,UAFJ;AANX;AAaF;;AACA,SAAKR,YAAL;AAAA,UACUS,QADV,GACuBN,MADvB,CACUM,QADV;;AAEA;AACE,aAAOP,KAAP;AA5BJ;AA8BD","sourcesContent":["import {\n  RECEIVE_QUESTIONS,\n  ANSWER_QUESTION,\n  ADD_QUESTION\n} from \"../actions/questions\";\n\nexport default function questions(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return {\n        ...state,\n        ...action.questions\n      };\n    // HANDLE ANSWEREING A NEW QUESTION\n    case ANSWER_QUESTION:\n      // return a new object state\n      // spread all the previous questions out from state\n      // remember, you are re-creating each piece of the state. In this case, we are rebuilding parts of the questions state by accessing certain keys, spreading them out, and adding new information to them. Study this carefully.\n      return {\n        ...state,\n        [action.qid]: {\n          ...state[action.qid],\n          [action.answer]: {\n            ...state[action.qid][action.answer],\n            votes: [\n              ...state[action.qid][action.answer].votes,\n              action.authedUser\n            ]\n          }\n        }\n      };\n    // ADD A NEW QUESTION TO THE STORE\n    case ADD_QUESTION:\n      const { question } = action;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}