{"ast":null,"code":"import _classCallCheck from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/src/components/NewQuestion.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleAddQuestion } from \"../actions/questions\";\n\nvar NewQuestion =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewQuestion, _Component);\n\n  function NewQuestion() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewQuestion);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewQuestion)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      optionOneInput: \"\",\n      optionTwoInput: \"\",\n      questionSubmitted: false\n    };\n    return _this;\n  }\n\n  _createClass(NewQuestion, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var text = e.target.value.text;\n      var text1 = e.target.name === \"option1\" ? e.target.value : this.state.optionOneInput;\n      var text2 = e.target.name === \"option2\" ? e.target.value : this.state.optionTwoInput;\n      console.log(text1, text2);\n      this.setState(function () {\n        return {\n          optionOneInput: text1,\n          optionTwoInput: text2\n        };\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      // grab the two user-entered options\n      var opt1 = this.state.optionOneInput;\n      var opt2 = this.state.optionTwoInput;\n      console.log(opt1, opt2); // reset the input value fields to blank values\n\n      this.setState(function () {\n        return {\n          optionOneInput: \"\",\n          optionTwoInput: \"\",\n          questionSubmitted: true\n        };\n      }); // add question to the store\n\n      var dispatch = this.props.dispatch;\n      dispatch(handleAddQuestion({\n        opt1: opt1,\n        opt2: opt2\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"New Question\"), React.createElement(\"div\", {\n        className: \"single-question-view question-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Would you rather...\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.optionOneInput,\n        name: \"option1\",\n        type: \"text\",\n        placeholder: \"Answer 1...\",\n        onChange: this.handleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        value: this.state.optionTwoInput,\n        name: \"option2\",\n        type: \"text\",\n        placeholder: \"Answer 2...\",\n        onChange: this.handleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"center-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary add-ques-btn\",\n        disabled: this.state.optionOneInput === \"\" || this.state.optionTwoInput === \"\",\n        onClick: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"SUBMIT\"))));\n    }\n  }]);\n\n  return NewQuestion;\n}(Component);\n\nexport default connect()(NewQuestion);","map":{"version":3,"sources":["/Users/simranrai/Google Drive/Udacity/React Nanodegree/4. React and Redux/rend-p2-would-you-rather/src/components/NewQuestion.js"],"names":["React","Component","connect","handleAddQuestion","NewQuestion","state","optionOneInput","optionTwoInput","questionSubmitted","e","text","target","value","text1","name","text2","console","log","setState","opt1","opt2","dispatch","props","handleChange","bind","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleAddQuestion } from \"../actions/questions\";\n\nclass NewQuestion extends Component {\n  state = {\n    optionOneInput: \"\",\n    optionTwoInput: \"\",\n    questionSubmitted: false\n  };\n\n  handleChange(e) {\n    const { text } = e.target.value;\n    let text1 =\n      e.target.name === \"option1\" ? e.target.value : this.state.optionOneInput;\n    let text2 =\n      e.target.name === \"option2\" ? e.target.value : this.state.optionTwoInput;\n\n    console.log(text1, text2);\n\n    this.setState(() => ({\n      optionOneInput: text1,\n      optionTwoInput: text2\n    }));\n  }\n\n  handleSubmit(e) {\n    // grab the two user-entered options\n    let opt1 = this.state.optionOneInput;\n    let opt2 = this.state.optionTwoInput;\n    console.log(opt1, opt2);\n    // reset the input value fields to blank values\n    this.setState(() => ({\n      optionOneInput: \"\",\n      optionTwoInput: \"\",\n      questionSubmitted: true\n    }));\n    // add question to the store\n    const { dispatch } = this.props;\n    dispatch(\n      handleAddQuestion({\n        opt1,\n        opt2\n      })\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>New Question</h2>\n        <div className=\"single-question-view question-border\">\n          <h3>Would you rather...</h3>\n          <form>\n            <input\n              value={this.state.optionOneInput}\n              name=\"option1\"\n              type=\"text\"\n              placeholder=\"Answer 1...\"\n              onChange={this.handleChange.bind(this)}\n            />\n            <input\n              value={this.state.optionTwoInput}\n              name=\"option2\"\n              type=\"text\"\n              placeholder=\"Answer 2...\"\n              onChange={this.handleChange.bind(this)}\n            />\n          </form>\n          <div className=\"center-btn\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary add-ques-btn\"\n              disabled={\n                this.state.optionOneInput === \"\" ||\n                this.state.optionTwoInput === \"\"\n              }\n              onClick={this.handleSubmit.bind(this)}\n            >\n              SUBMIT\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(NewQuestion);\n"]},"metadata":{},"sourceType":"module"}